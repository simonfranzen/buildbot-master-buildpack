# Install dependencies with Pip.
puts-step "Installing buildbot dependencies"

if [ -f "$BUILD_DIR/.env" ]; then
    # import user enviroment variables for flynn
    source "$BUILD_DIR/.env"
fi

if [ ! "$BB_CHECKOUT" ]; then
    BB_CHECKOUT='master'
fi

if [ ! "$BB_REPO" ]; then
    BB_REPO='https://github.com/buildbot/buildbot'
fi

if [ ! "$BB_WWW_PLUGINS" ]; then
    BB_WWW_PLUGINS='base'
fi

git clone -b "$BB_CHECKOUT" "$BB_REPO" "buildbot"

/app/python/bin/pip install mock | cleanup | indent
/app/python/bin/pip install -e "buildbot/master" | cleanup | indent
/app/python/bin/pip install -e "buildbot/pkg" | cleanup | indent

puts-step 'Installing buildbot plugins (this may take quite a long time)'
OLD_IFS=IFS
IFS=','
for plugin in $BB_WWW_PLUGINS; do
    /app/python/bin/pip install -v -e "buildbot/www/$plugin" | cleanup | indent
done
IFS=OLD_IFS


/app/python/bin/buildbot create-master master

puts-step 'Copying config file'
if [ ! -f "$BUILD_DIR/master.cfg" ]; then
    cp "$ROOT_DIR/vendor/master.cfg.sample" "$BUILD_DIR/master/master.cfg"
else
    cp "$BUILD_DIR/master.cfg" "$BUILD_DIR/master/master.cfg"
fi
if [ ! -f "$BUILD_DIR/Procfile" ]; then
    cp "$ROOT_DIR/vendor/Procfile.sample" "$BUILD_DIR/Procfile"
fi
if [ ! -f "$BUILD_DIR/CHECKS" ]; then
    echo "/" > "$BUILD_DIR/CHECKS"
fi
